{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/StorePicker.js","components/NotFound.js","components/Router.js","index.js"],"names":["Header","props","className","tagline","formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","Order","renderOrder","key","fish","fishes","count","order","onAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","this","total","reduce","prevTotal","map","React","Component","AddFishForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createFish","event","preventDefault","current","value","parseFloat","desc","image","addFish","currentTarget","reset","onSubmit","ref","type","placeholder","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeName","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","sampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","isAvailable","src","alt","disabled","App","Date","now","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","StorePicker","myInput","goToStore","history","push","required","defaultValue","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.a9f59264.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Header = props => (\n    <header className=\"top\">\n        <h1>Catch\n            <span className=\"ofthe\">\n                <span className=\"of\">Of</span>\n                <span className=\"the\">The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>\n                {props.tagline}\n            </span>\n        </h3>\n    </header>\n\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\n\nexport default Header;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    };\n\n    renderOrder = key => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const onAvailable = fish && fish.status === \"available\";\n\n        const transitionOptions = {\n            classNames: \"order\",\n            key,\n            timeout: { enter: 500, exit: 500 }\n        };\n\n        // Make sure the fish is loaded before we continue!\n        if (!fish) return null;\n\n        if (!onAvailable) {\n            return (\n                <CSSTransition {...transitionOptions}>\n                    <li key={key}>\n                        Sorry {fish ? fish.name : \"fish\"} is no longer available\n                    </li>\n                </CSSTransition>\n            );\n        }\n\n\n        return (\n            <CSSTransition {...transitionOptions}>\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition\n                                classNames=\"count\"\n                                key={count}\n                                timeout={{ enter: 500, exit: 5000 }}\n                            >\n                                <span>{count}</span>\n                            </CSSTransition>\n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeFromOrder(key)} >&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n\n        );\n    };\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if (isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                    Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func.isRequired\n    }\n\n    createFish = (event) => {\n        // 1. Stop the form from submitting\n        event.preventDefault();\n\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n\n        }\n\n        this.props.addFish(fish);\n        // refresh the form\n        event.currentTarget.reset();\n    }\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef} >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        );\n    }\n}\n\nexport default AddFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        index: PropTypes.string,\n        updateFish: PropTypes.func,\n    }\n\n    handleChange = (event) => {\n        console.log(event.currentTarget.value);\n        // update that fish\n        // 1. Take a copy of the current fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish)\n    };\n\n    render() {\n        return (\n            <div className=\"fish-edit\">\n                <input\n                    type=\"text\"\n                    name=\"name\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.name}\n                />\n                <input\n                    type=\"text\"\n                    name=\"price\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.price}\n                />\n                <select\n                    type=\"text\"\n                    name=\"status\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.status}\n                >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea\n                    name=\"desc\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.desc}\n                />\n                <input\n                    type=\"text\"\n                    name=\"image\"\n                    onChange={this.handleChange}\n                    value={this.props.fish.image}\n                />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        );\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button\n            className=\"github\"\n            onClick={() => props.authenticate(\"Github\")}\n        >\n            Log In with Github\n        </button>\n        <button\n            className=\"twitter\"\n            onClick={() => props.authenticate(\"Twitter\")}\n        >\n            Log In with Twitter\n        </button>\n        <button\n            className=\"facebook\"\n            onClick={() => props.authenticate(\"Facebook\")}\n        >\n            Log In with FaceBook\n        </button>\n    </nav>\n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n\n    apiKey: \"AIzaSyA7YLWIlCAKLfMBjOtxkGfI4z0iFhu18Bk\",\n    authDomain: \"catch-of-the-day-dom-cole.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-dom-cole.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// This is a named export\nexport { firebaseApp };\n\n// This is  default export\nexport default base;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";\n\n\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func,\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    componentDidMount() {\n        firebase.auth().onAuthStateChanged(user => {\n            if (user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        //1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeName, { context: this });\n        console.log(store);\n        //2. claim it if there is no owner\n        if (!store.owner) {\n            // save it as our own\n            await base.post(`${this.props.storeName}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        //3. set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n    };\n\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n            .auth()\n            .signInWithPopup(authProvider)\n            .then(this.authHandler);\n    }\n\n    logout = async () => {\n        console.log('Logging Out!');\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n    };\n\n    render() {\n        const logout = <button onClick={this.logout}>Log Out!</button>;\n        //1. Check if they are logged in\n        if (!this.state.uid) {\n            return <Login authenticate={this.authenticate} />;\n        }\n\n        // 2. check if they are not the owner of the store\n        if (this.state.uid !== this.state.owner) {\n            return (\n                <div>\n                    <p>Sorry you are not the owner!</p>\n                    {logout}\n                </div>\n            );\n        }\n        // 3. they must be the owner, just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => (\n                    <EditFishForm\n                        key={key}\n                        index={key}\n                        fish={this.props.fishes[key]}\n                        updateFish={this.props.updateFish}\n                        deleteFish={this.props.deleteFish}\n                    />\n                ))}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        );\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst sampleFishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default sampleFishes;\n","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport { formatPrice } from \"../helpers\";\n\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number,\n        }),\n        addToOrder: PropTypes.func,\n\n    }\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    }\n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick} >\n                    {isAvailable ? 'Add to Order' : 'Sold out!'}\n                </button>\n            </li>\n        );\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from \"./Fish\";\nimport { object } from 'prop-types';\nimport base from \"../base\";\n\n\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeName);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n        this.ref = base.syncState(`${params.storeName}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem(this.props.match.params.storeName, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Take a copy of the existing state to update state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. take a copy of state \n        const fishes = { ...this.state.fishes };\n        // 1. update the state\n        fishes[key] = null;\n        // 3. update state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that item from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeName={this.props.match.params.storeName}\n                />\n\n            </div>\n        )\n    }\n}\n\n\nexport default App;","import { selectionSetMatchesResult } from '@apollo/client/cache/inmemory/helpers';\nimport { formatError } from 'graphql';\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { getFunName } from '../helpers';\n\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef();\n\n    static propTypes = {\n        history: PropTypes.object\n    };\n\n    goToStore = (event) => {\n        event.preventDefault();\n\n        const storeName = console.log(this.myInput.current.value);\n        this.props.history.push(`/store/${storeName}`);\n    };\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore} >\n                <h2>Please Enter A Store</h2>\n                <input type=\"text\" ref={this.myInput} required placeholder=\"Store Name\" defaultValue={getFunName()} />\n                <button type=\"submit\">Visit Store </button>\n            </form>\n        )\n    }\n}\n\n\nexport default StorePicker;","import React from 'react';\n\n\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!?!!!</h2>\n    </div>\n);\n\nexport default NotFound;","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from \"./App\";\nimport StorePicker from './StorePicker';\nimport NotFound from \"./NotFound\";\n\n\n\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker} />\n            <Route path=\"/store/:storeName\" component={App} />\n            <Route component={NotFound} />\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport './css/style.css';\nimport Router from './components/Router';\n\n\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}