{"ast":null,"code":"import _objectSpread from\"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React from'react';import Header from'./Header';import Order from'./Order';import Inventory from'./Inventory';import sampleFishes from'../sample-fishes';import Fish from\"./Fish\";import base from\"../base\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={fishes:{},order:{}};_this.addFish=function(fish){// 1. Take a copy of the existing state to update state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. Add our new fish to that fishes variable\nfishes[\"fish\".concat(Date.now())]=fish;// 3. Set the new fishes object to state\n_this.setState({fishes});};_this.updateFish=function(key,updatedFish){// 1. Take a copy of the current state\nvar fishes=_objectSpread({},_this.state.fishes);// 2. update that state\nfishes[key]=updatedFish;// 3. Set that to state\n_this.setState({fishes});};_this.deleteFish=function(key){// 1. take a copy of state \nvar fishes=_objectSpread({},_this.state.fishes);// 1. update the state\nfishes[key]=null;// 3. update state\n_this.setState({fishes});};_this.loadSampleFishes=function(){_this.setState({fishes:sampleFishes});};_this.addToOrder=function(key){// 1. take a copy of state\nvar order=_objectSpread({},_this.state.order);// 2. Either add to the order, or update the number in our order\norder[key]=order[key]+1||1;// 3. Call setState to update our state object\n_this.setState({order});};_this.removeFromOrder=function(key){// 1. take a copy of state\nvar order=_objectSpread({},_this.state.order);// 2. remove that item from order\ndelete order[key];// 3. Call setState to update our state object\n_this.setState({order});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var params=this.props.match.params;// first reinstate our localStorage\nvar localStorageRef=localStorage.getItem(params.storeName);if(localStorageRef){this.setState({order:JSON.parse(localStorageRef)});}this.ref=base.syncState(\"\".concat(params.storeName,\"/fishes\"),{context:this,state:'fishes'});}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){console.log(this.state.order);localStorage.setItem(this.props.match.params.storeName,JSON.stringify(this.state.order));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){base.removeBinding(this.ref);}},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"catch-of-the-day\"},/*#__PURE__*/React.createElement(\"div\",{className:\"menu\"},/*#__PURE__*/React.createElement(Header,{tagline:\"Fresh Seafood Market\"}),/*#__PURE__*/React.createElement(\"ul\",{className:\"fishes\"},Object.keys(this.state.fishes).map(function(key){return/*#__PURE__*/React.createElement(Fish,{key:key,index:key,details:_this2.state.fishes[key],addToOrder:_this2.addToOrder});}))),/*#__PURE__*/React.createElement(Order,{fishes:this.state.fishes,order:this.state.order,removeFromOrder:this.removeFromOrder}),/*#__PURE__*/React.createElement(Inventory,{addFish:this.addFish,updateFish:this.updateFish,deleteFish:this.deleteFish,loadSampleFishes:this.loadSampleFishes,fishes:this.state.fishes,storeName:this.props.match.params.storeName}));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeName","JSON","parse","ref","syncState","context","console","log","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from \"./Fish\";\nimport { object } from 'prop-types';\nimport base from \"../base\";\n\n\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    };\n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeName);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n        this.ref = base.syncState(`${params.storeName}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem(this.props.match.params.storeName, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Take a copy of the existing state to update state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. take a copy of state \n        const fishes = { ...this.state.fishes };\n        // 1. update the state\n        fishes[key] = null;\n        // 3. update state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that item from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\" />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeName={this.props.match.params.storeName}\n                />\n\n            </div>\n        )\n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}