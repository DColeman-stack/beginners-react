{"ast":null,"code":"import _objectSpread from \"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _createSuper from \"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _inherits from \"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from \"./Fish\";\nimport { object } from 'prop-types';\nimport base from \"../base\";\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      // 1. Take a copy of the existing state to update state\n      var fishes = _objectSpread({}, _this.state.fishes); // 2. Add our new fish to that fishes variable\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; // 3. Set the new fishes object to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.updateFish = function (key, updatedFish) {\n      // 1. Take a copy of the current state\n      var fishes = _objectSpread({}, _this.state.fishes); // 2. update that state\n\n\n      fishes[key] = updatedFish; // 3. Set that to state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      // 1. take a copy of state \n      var fishes = _objectSpread({}, _this.state.fishes); // 1. update the state\n\n\n      fishes[key] = null; // 3. update state\n\n      _this.setState({\n        fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. Either add to the order, or update the number in our order\n\n\n      order[key] = order[key] + 1 || 1; // 3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      // 1. take a copy of state\n      var order = _objectSpread({}, _this.state.order); // 2. remove that item from order\n\n\n      delete order[key]; // 3. Call setState to update our state object\n\n      _this.setState({\n        order\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      console.log(this.state.order);\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"menu\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Header, {\n        tagline: \"Fresh Seafood Market\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(\"ul\", {\n        className: \"fishes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return /*#__PURE__*/React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 29\n          }\n        });\n      }))), /*#__PURE__*/React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        removeFromOrder: this.removeFromOrder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(Inventory, {\n        addFish: this.addFish,\n        updateFish: this.updateFish,\n        deleteFish: this.deleteFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }));\n    }\n  }], [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params; // first reinstate our localStorage\n\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/realcoleman/Downloads/wes-bos/React-For-Beginners-Starter-Files/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","object","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","console","log","localStorage","setItem","props","match","params","storeId","JSON","stringify","removeBinding","ref","Object","keys","map","localStorageRef","getItem","parse","syncState","context","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from \"./Fish\";\nimport { object } from 'prop-types';\nimport base from \"../base\";\n\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static \n\n    componentDidMount() {\n        const { params } = this.props.match;\n        // first reinstate our localStorage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentDidUpdate() {\n        console.log(this.state.order);\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        // 1. Take a copy of the existing state to update state\n        const fishes = { ...this.state.fishes };\n        // 2. Add our new fish to that fishes variable\n        fishes[`fish${Date.now()}`] = fish;\n        // 3. Set the new fishes object to state\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        // 1. Take a copy of the current state\n        const fishes = { ...this.state.fishes };\n        // 2. update that state\n        fishes[key] = updatedFish;\n        // 3. Set that to state\n        this.setState({ fishes });\n    };\n\n    deleteFish = (key) => {\n        // 1. take a copy of state \n        const fishes = { ...this.state.fishes };\n        // 1. update the state\n        fishes[key] = null;\n        // 3. update state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. Either add to the order, or update the number in our order\n        order[key] = order[key] + 1 || 1;\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    removeFromOrder = key => {\n        // 1. take a copy of state\n        const order = { ...this.state.order };\n        // 2. remove that item from order\n        delete order[key];\n        // 3. Call setState to update our state object\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"  />\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key => (\n                            <Fish\n                                key={key}\n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order\n                    fishes={this.state.fishes}\n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                />\n\n            </div>\n        )\n    }\n}\n\n\nexport default App;"]},"metadata":{},"sourceType":"module"}